info(
	desc: "会员关注的品牌"
	author: "koobe"
	email: "1002219331@qq.com"
)

type (
	addAttentionReq {
		BrandId        int64     `json:"brandId"`         // 品牌id
		BrandName      string    `json:"brandName"`      // 品牌名称
		BrandLogo      string    `json:"brandLogo"`      // 品牌Logo
		BrandCity      string    `json:"brandCity"`       // 品牌所在城市
	}
	addAttentionResp {
		Code    int64  `json:"code"`
		Message string `json:"message"`
	}

	ListAttentionData {
		Id             int64     `json:"id"`
		MemberId       int64     `json:"memberId"`        // 会员id
		MemberNickName string    `json:"memberNickName"` // 会员姓名
		MemberIcon     string    `json:"memberIcon"`      // 会员头像
		BrandId        int64     `json:"brandId"`         // 品牌id
		BrandName      string    `json:"brandName"`      // 品牌名称
		BrandLogo      string    `json:"brandLogo"`      // 品牌Logo
		BrandCity      string    `json:"brandCity"`       // 品牌所在城市
		CreateTime     string `json:"createTime"`      // 关注时间
	}
	ListAttentionResp {
		Data     []ListAttentionData `json:"data"`
		Success  bool                    `json:"success"`
		Code     int64                   `json:"code"`
		Message  string                  `json:"message"`
	}

	ClearAttentionResp {
		Code    int64  `json:"code"`
		Message string `json:"message"`
	}
	DeleteAttentionReq {
		Id int64 `path:"id"`
	}
	DeleteAttentionResp {
		Code    int64  `json:"code"`
		Message string `json:"message"`
	}
)

@server(
	jwt: Auth
	group: member/attention
	prefix: /api/member/attention
)
service front-api {
	@handler AttentionAdd
	post /add (addAttentionReq) returns (addAttentionResp)
	
	@handler AttentionList
	get /list returns (ListAttentionResp)
	
	@handler AttentionDelete
	get /delete/:id (DeleteAttentionReq) returns (DeleteAttentionResp)

	@handler AttentionClear
	get /clear returns (ClearAttentionResp)

}