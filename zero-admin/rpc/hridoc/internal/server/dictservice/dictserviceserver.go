// Code generated by goctl. DO NOT EDIT.
// Source: sys.proto

package server

import (
	"context"

	"zero-admin/rpc/hridoc/internal/logic/dictservice"
	"zero-admin/rpc/hridoc/internal/svc"
	"zero-admin/rpc/proto/sys"
)

type DictServiceServer struct {
	svcCtx *svc.ServiceContext
	sys.UnimplementedDictServiceServer
}

func NewDictServiceServer(svcCtx *svc.ServiceContext) *DictServiceServer {
	return &DictServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *DictServiceServer) DictAdd(ctx context.Context, in *sys.DictAddReq) (*sys.DictAddResp, error) {
	l := dictservicelogic.NewDictAddLogic(ctx, s.svcCtx)
	return l.DictAdd(in)
}

func (s *DictServiceServer) DictList(ctx context.Context, in *sys.DictListReq) (*sys.DictListResp, error) {
	l := dictservicelogic.NewDictListLogic(ctx, s.svcCtx)
	return l.DictList(in)
}

func (s *DictServiceServer) DictUpdate(ctx context.Context, in *sys.DictUpdateReq) (*sys.DictUpdateResp, error) {
	l := dictservicelogic.NewDictUpdateLogic(ctx, s.svcCtx)
	return l.DictUpdate(in)
}

func (s *DictServiceServer) DictDelete(ctx context.Context, in *sys.DictDeleteReq) (*sys.DictDeleteResp, error) {
	l := dictservicelogic.NewDictDeleteLogic(ctx, s.svcCtx)
	return l.DictDelete(in)
}
